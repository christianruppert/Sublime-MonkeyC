%YAML 1.2
---
name: MonkeyC
file_extensions:
  - mc
first_line_match: ^\s*using\s+Toybox\b.*$\n?
scope: source.mc

variables:
  id_start: '[[:alpha:]_]'
  identifier: '\b{{id_start}}[[:alnum:]_]*\b'

contexts:
  comments:
    - match: \/\/
      scope: punctuation.definition.comment.mc
      push:
        - meta_scope: comment.line.mc
        - match: '$'
          pop: true
    - match: /\*
      scope: punctuation.definition.comment.mc
      push:
        - meta_scope: comment.block.mc
        - match: \*/
          pop: true


  strings:
    - match: '"'
      scope: punctuation.definition.string.begin.mc
      push:
        - meta_scope: string.quoted.double.mc
        - match: \\.
          scope: constant.character.escape.mc
        - match: '%([\+\-0])?([0-9]+)?(\.[0-9]+)?([dieEfouxX])'
          scope: constant.other.placeholder.mc
        - match: '\$[0-9]+\$'
          scope: constant.other.placeholder.mc
        - match: '"'
          scope: punctuation.definition.string.end.mc
          pop: true
    - match: "'"
      scope: punctuation.definition.string.begin.mc
      push:
        - meta_scope: string.quoted.single.mc
        - match: \\.
          scope: constant.character.escape.mc
        - match: "'"
          scope: punctuation.definition.string.end.mc
          pop: true

  keywords:
    - match: '\b(if|else|for|while|switch|case|break|continue|default|do|try|catch|finally|return|throw)\b'
      scope: keyword.control.flow.mc
    - match: '\b(using|as)\b'
      scope: keyword.control.import.mc
    - match: '\b(instanceof|has|extends)\b'
      scope: keyword.operator.mc
    - match: '\b(var|const|enum)\b'
      scope: storage.type.mc
    - match: '\b(hidden|public|private|hidden|static)\b'
      scope: storage.modifier.mc
    - match: '\b(true|false|null|NaN)\b'
      scope: constant.language.mc
    - match: '\bnew\b'
      scope: meta.instance.constructor.mc keyword.control.new.mc


  operators:
    - match: '=>|[+-]='
      scope: keyword.operator.assignment.mc
    - match: '&&|\|\|'
      scope: keyword.operator.logic.mc
    - match: '~|&|\||\^|>>|<<'
      scope: keyword.operator.bitwise.mc
    - match: '[<>]=?|[!=]='
      scope: keyword.operator.comparison.mc
    - match: '!'
      scope: keyword.operator.logic.mc
    - match: '\b(and|or)\b'
      scope: keyword.operator.word.mc
    - match: '(\+|\-|\*|\/|%)'
      scope: keyword.operator.arithmetic.mc
    - match: '='
      scope: keyword.operator.assignment.mc
    - match: '\?'
      scope: keyword.operator.other.mc

  string_symbols:
    - match: '(\b|\s*):{{identifier}}+\b'
      scope: constant.other.symbol.mc

  brackets:
    - match: \)
      pop: true
    - include: main

  numbers:
    - match: '\b(-)?([0-9]+\.[0-9]+[df]?)\b'
      scope: constant.numeric.float.mc
    - match: '\b(-)?([0-9]+l?)\b'
      scope: constant.numeric.integer.mc
    - match: '\b(-)?(0x[0-9a-fA-F]+l?)\b'
      scope: constant.numeric.hex.mc

  functions:
    # function definition
    - match: '\b((?:public|private|protected|static)\s+)*(function)\s+({{identifier}})'
      captures:
        1: storage.modifier.mc
        2: storage.type.function.mc
        3: entity.name.function.mc
      push:
        - meta_scope: meta.function.method.with-parameters.mc
        - include: comments
        - meta_content_scope: variable.parameter.function.mc
        - match: (?=\()
          set:
            - match: \(
              scope: meta.function.parameters.mc meta.group.mc punctuation.section.group.begin.mc
              set: function-parameters
          

    # function call
    - match: '(\b|\.)({{identifier}}*)(\()'
      captures:
        1: variable.function.mc
        2: punctuation.definition.parameters.begin.mc punctuation.section.group.begin.mc
      push:
        - meta_scope: meta.function-call.mc
        - meta_content_scope: meta.function-call.parameters.mc
        - match: \)
          scope: punctuation.definition.parameters.end.mc punctuation.definition.group.end.mc
          pop: true
        - include: main

  function-parameters:
      - meta_content_scope: meta.function.parameters.mc meta.group.mc
      - match: '\)'
        scope: punctuation.definition.parameters.mc punctuation.section.group.end.mc
        set:
          - meta_content_scope: meta.function.mc
          - match: \{
            scope: meta.block.mc punctuation.section.block.begin.mc
            set: function-body
          # Exit on unexpected content
          - match: (?=\S)
            pop: true
      - include: comments
      - match: '{{identifier}}'
        scope: variable.parameter.function.mc
      - match: ','
        scope: punctuation.separator.mc
  function-body:
    - meta_content_scope: meta.function.mc meta.block.mc
    - match: \}
      scope: meta.function.mc meta.block.mc punctuation.section.block.end.mc
      pop: true
    - include: main


  oop:
    - match: '(class)\s+([a-zA-Z_]\w*)(\s*(extends)\s*([a-zA-Z_.]+))?\s*(\{)?'
      captures:
        1: storage.type.class.mc
        2: entity.name.type.class.mc
        4: keyword.operator.mc
        5: entity.other.inherited-class.mc
        6: punctuation.definition.class.mc
      push:
        - meta_scope: meta.class
        - match: \}
          pop: true
        - include: main

  provided:
    - match: '(\b|\.)(Activity(Monitor|Recording)?|Ant(Plus)?|Application|Attention|Background|Communications|Cryptography|FitContributor|Graphics|Gregorian|Lang|Math|Media|Persisted(Content|Locations)|Position|Properties|Sensor(History|Logging)?|Storage|StringUtil|System|Test|Time(r)?|Toybox|UserProfile|WatchUi|Rez)(\b|\.)'
      scope: support.module.mc meta.path.mc
    - match: |-
          (?x)(\b|\.)(
            AccelerometerData|
            ActiveMinutes|
            AlbumArt|
            AppBase|
            Array|
            Audio(ContentProviderApp|Format)|
            BatteryStatus|
            BehaviorDelegate|
            Bike(
              Cadence(Info|Listener)?|
              Light|
              Power(Listener)?|
              Radar(Listener)?|
              Speed(Cadence(Info|Listener)?|Info|Listener)?
            )|
            Bitmap(Resource)?|
            Boolean|
            BufferedBitmap|
            Burst(Listener|Payload(Iterator)?)|
            Button|
            ByteArray|
            CacheStatistics|
            Calculated(Cadence|Power|Wheel(Distance|Speed))|
            ChannelAssignment|
            Char|
            CheckboxMenu(Item)?|
            Cipher(BasedMessageAuthenticationCode)?|
            ClickEvent|
            ClockTime|
            CommonData|
            Confirmation(Delegate)?|
            Connection(Info|Listener)?|
            Content(Delegate|Iterator|Metadata|Ref(Iterator)?)?|
            Course|
            CryptoConfig|
            DataField|
            Dc|
            Device(Config|Listener|Settings|State)?|
            Dictionary|
            Double|
            Drawable|
            Duration|
            Exception|
            Field|
            (Fir|Iir)?Filter|
            FitnessEquipment(Data|Listener|Mode)?|
            Float|
            FontResource|
            GenericChannel|
            Hash(BasedMessageAuthenticationCode)?|
            HeartRate(Data|Iterator|Sample)|
            History|
            IconMenuItem|
            Info|
            InputDelegate|
            Intent|
            InvalidOptionsException|
            Iterator|
            Key(Agreement|Event|Pair)?|
            LightNetwork(Listener)?|
            Location|
            Logger|
            Long|
            MailboxIterator|
            ManufacturerInfo|
            Map(Marker|Polyline|TrackView|View)?|
            Menu(2(InputDelegate)?|InputDelegate|Item)?|
            Message|
            Method|
            Moment|
            Number(Picker(Delegate)?)?|
            OAuthMessage|
            Object|
            PedalPowerBalance|
            PhoneAppMessage|
            Picker(Delegate|Factory)?|
            PlaybackProfile|
            ProductInfo|
            Profile|
            ProgressBar|
            ProviderIconInfo|
            RadarTarget|
            ResistanceSettings|
            Route|
            RunningDynamics(Data|Listener)?|
            Selectable(Event)?|
            Sensor(Data|HistoryIterator|Logger|LoggingStats|Position|Sample)|
            SerializationException|
            ServiceDelegate|
            Session|
            SimpleDataField|
            SimulationSettings|
            Stats|
            StorageFullException|
            String|
            SwipeEvent|
            Symbol(NotAllowedException)?|
            SyncDelegate|
            TargetPowerSettings|
            Text(Picker(Delegate)?)?|
            ToggleMenuItem|
            TorqueEffectivenessPedalSmoothness|
            Track|
            UnexpectedTypeException|
            UserSettings|
            ValueOutOfBoundsException|
            VibeProfile|
            View|
            WatchFace(Delegate|PowerInfo)?|
            Waypoint|
            WeakReference|
            Workout
          )(\b|\.)
      scope: support.class.mc meta.path.mc
    - match: |-
        (?x)(\b|\.)(
          abs|accel(erometerData)?|accuracy|acos|
          active(Minutes(Day|Week(Goal)?)?)|
          activity(Class|TrackingOn)|add(All|Item|Key|Lap|Location)?|
          alarmCount|album|allowTrialMessage|altitude|ambientPressure|
          animate|apply|arguments|artist|asin|
          assert(Not)?(Equal(Message)?)?|atan2?|
          attemptSkipAfterThumbsDown|
          average(Cadence|Distance|HeartRate|Power|Speed)|
          background|backlight|basicResistance(Supported)?|
          battery(Status|Voltage)?|bearing(FromStart)?|
          behavior|bikeWeight|birthYear|bitRate|bodyLocation|cadence|
          calories|canSkip|cancelAllRequests|capacity|ceil|channelType|
          charArrayToString|charging|clear(Clip|Properties|Values)?|
          close|compare|compute|connection(Available|Info)|
          controlEquipment|convertEncodedString|cos|
          create(Field|Session)|
          current(Cadence|Heading|HeartRate|Location(Accuracy)?|Power|Speed)|
          data|day(_of_week)?|debug|decimationRate|decrypt|
          delete(CachedItem|GoalEvent|Item|OAuthResponseEvent|Property|SleepEvent|StepsEvent|TemporalEvent|Value|WakeEvent)|
          device(Number|Type)|digest|disableEncryption|discard|
          distance(To(Destination|NextPoint)|Units)|divide|doNotDisturb|
          draftFactor|draw(Arc|Bitmap|Circle|Ellipse|Line|Point|Rectangle|RoundedRectangle|Text)?|
          dst|duration|dutyCycle|elapsed(Distance|Time)|
          elevation(At(Destination|NextPoint)|Units)|emptyMailbox|
          enable(Encryption|LocationEvents|SensorEvents)|encode(Base64|URL)|
          encrypt(ion(Id|Key))?|energyExpenditure|equals|error|
          executionTime(Average|Limit)|exit(To)?|
          fe(Distance|HeartRate|Speed)|
          fill(Circle|Ellipse|Polygon|Rectangle|RoundedRectangle)|
          find((Drawable|Item)ById)?|firmwareVersion|firstDayOfWeek|
          floor(s(Climbed(Goal)?|Descended)?)|format|freeMemory|
          (front|rear)Derailleur(Index|Max|Size)|gearRatio|gender|
          generate(Secret|SignedOAuthHeader)|genre|
          get(
            ActivityInfo|App|Background(Color|Data)|BatteryStatus|BikeLights|
            Bytes|CacheStatistics|CachedContentObj|CadenceInfo|
            Calculated(Cadence|Power|Wheel(Distance|Speed))|
            CapableModes|ClockTime|ComponentIdentifiers|
            Content(Delegate|Iterator|Ref(Iter)?|Type)|
            Coordinates|Courses|CurrentSport|Dc|Device(Config|Settings|State)|
            Dimensions|Direction|Drawable|ElevationHistory|EquipmentData|
            ErrorMessage|Font(Ascent|Descent|Height)|Goal(EventRegistered|View)|
            HeartRate(History|Zones)|Height|History|Icon|Id|Info|
            InitialView|Instance|Item|Key|Label|LastTemporalEventTime|Location|
            Mailbox|ManufacturerInfo|MapMode|Max(SampleRate)?|Metadata|Min|
            Name|Network(Mode|State)|NewestSampleTime|
            OAuthResponseEventRegistered|ObscurityFlags|OldestSampleTime|
            Palette|Payload|PedalPowerBalance|Playback(ConfigurationView|Profile)|
            PressureHistory|PreviousState|PrivateKey|ProductInfo|Profile|Property|
            ProviderIconInfo|PublicKey|RadarInfo|ResistanceSettings|Routes|
            RunningDynamics|SensorPosition|ServiceDelegate|SimulationSettings|
            Size|SleepEventRegistered|Speed(Cadence)?Info|State|Stats|
            StepsEventRegistered|SubLabel|Sync(ConfigurationView|Delegate)|
            SystemStats|TarPowerSettings|TemperatureHistory|
            TemporalEventRegisteredTime|Text(Dimensions|WidthInPixels)|Timer|
            TorqueEffectivenessPedalSmoothness|Tracks|TrainerMode|
            TrialDaysRemaining|Type|UserSettings|Value|WakeEventRegistered|
            Waypoints|Width|Workouts
          )|
          greaterThan|groundContact(Balance|Time)|hasKey|hashCode|heading|
          heart(BeatIntervals|Rate(Data)?)|height(Units)?|hour|hwRevision|
          identifier|image_(format|offset)|indexOf|info|initialize|inputButtons|invoke|
          is(24Hour|BackgroundScanEnabled|Checked|Empty|Enabled|Recording|
            SleepMode|SyncNeeded|TouchScreen|Trial)|
          keys|label|left(OrCombinedPedalSmoothness|TorqueEffectiveness)|length|
          lessThan|ln|load(Properties|Resource)|loc(X|Y)|log|mag|
          make(Image|Json|OAuth|Web)Request|manufacturerId|
          max(Cadence|HeartRate|Power|Speed)|meanSeaLevelPressure|
          message(Id|Period)|meters(Climbed|Descended)|method|min|mode|
          modelNumber|moderate|moment|monkeyVersion|month|moveBarLevel|multiply|
          nameOf(Destination|NextPoint)|network(Key(128|64)Bit)?|next|
          notificationCount|notifySync(Complete|Progress)|now|
          num(Channels|Components|Locations)|offCourseDistance|
          on(
            Accept|AdAction|Back(groundData)?|BatteryStatusUpdate|
            Bike(Cadence|Light|Radar|Speed(Cadence)?)Update|
            Calculated(Cadence|Power|Wheel(Distance|Speed)Update)|
            Cancel|Complete|DeviceStateUpdate|Done|(Enter|Exit)Sleep|Error|
            FitnessEquipmentUpdate|GoalReached|Hide|Hold|Key(Pressed|Released)?|
            Layout|LightNetworkStateUpdate|ManufacturerInfoUpdate|Menu(Item)?|
            Next(Mode|MultisportLeg|Page)|NumberPicked|OAuthResponse|
            PartialUpdate|PedalPowerBalanceUpdate|PowerBudgetExceeded|
            Previous(Mode|Page)|ProductInfoUpdate|Receive(Complete|Fail)|Release|
            Response|RunningDynamicsUpdate|Select(able)?|SensorPositionUpdate|
            SettingsChanged|Show|Shuffle|SleepTime|Song|(Start|Stop)(Sync)?|Steps|
            Swipe|Tap|TemporalEvent|TextEntered|Thumbs(Down|Up)|
            Timer(Lap|Pause|Reset|Resume|Start|Stop)|
            TorqueEffectivenessPedalSmoothnessUpdate|
            Transmit(Complete|Fail)|Update|WakeTime|WorkoutStepComplete
          )|
          open(WebPage)?|operatingTime|orientation|paceUnits|parse|partNumber|
          pedalPowerPercent|peek(Next|Previous)|persistLocation|phoneConnected|
          pitch|play(SpeedMultipliers|Tone|back(Controls|NotificationThreshold))|
          popView|position|pow(er(SensorType)?)?|pressure|previous|
          print(StackTrace|ln)?|pushView|put|radioFrequency|rand(omBytes)?|
          range|rawAmbientPressure|
          registerFor(
            (Goal|Sleep|Steps|Temporal|Wake)Event|
            OAuth(Messages|ResponseEvent)|PhoneAppMessages
          )|
          registerSensorDataListener|release|remove(All)?|
          request(ApplicationWake|Update)|requirePlaybackNotification|
          resetContent(Cache|Iterator)|responseCode|restingHeartRate|
          restore(Head|Tail)lightsNetworkModeControll|reverse|
          right(Pedal(Indicator|Smoothness)|TorqueEffectiveness)|roll|round|
          rssi|runningStepLength|
          sample(Count|Period|Rate)|save(Properties|Waypoint)?|
          screen(Height|Shape|Width)|
          search(Threshold|Timeout(High|Low)Priority)|sec|
          send(Acknowledge|Broadcast|Burst)|separatePedalSmoothnessSupport|
          serial|
          set(
              Background(Color|Scan)|Bitmap|BurstListener|Checked|Clip|Color|
              Data|DeviceConfig|DisplayString|Enabled(Sensors)?|Focus|Font|
              (Head|Tail)lightsMode|Icon|Justification|KeyToSelectableInteraction|
              Label|Layout|Location|MailboxListener|Map(Marker|Mode|VisibleArea)|
              Metadata|Mode|Options|Palette|Payload|PenWidth|Polyline|Progress|
              Property|ScreenVisibleArea|Size|State|SubLabel|Text|Title|
              TrainerMode|Value|Width
          )|
          shuffling|simulationSupported|sin|size|skipPreviousThreshold|sleepTime|
          slice|slope|speed|sqrt|srand|stanceTime|start(Location|OfDay|Playback|Time)?|
          state(Default|Disabled|Highlighted|Selected)?|step(Count|Goal|Length|s)?|
          stillAlive|stop|sub(string|tract)|supportsPlaylistPreview|
          surfaceResistance|swRevision(Main|Supplemental)|swim(StrokeType|Swolf)|
          switchToView|tan|targetPower(Supported)?|temperature(Units)?|
          threat(Side)?|time(ZoneOffset|rState|rTime|stamp)|title|
          to(
             Char(Array)?|Degrees|Double|Float|Intent|Long|Lower|Number(WithBase)?|
             Radians|(Geo)?String|Upper|Utf8Array
          )|
          today|toggleSignalLight|tonesOn|total(Ascent|Descent|Memory)?|
          track(Number)?|trainingEffect|transmissionType|transmit|type|
          uniqueIdentifier|unregisterSensorDataListener|update(Item)?|uri|
          usedMemory|user(InfoString|Weight)|utcInfo|utf8ArrayToString|
          validateProperty|values?|vertical(Oscillation|Ratio)|vibrate(On)?|
          vigorous|wakeTime|walking(Flag|StepLength)|warning|weak|
          weight(Units)?|wheelDiameter|when|width|windResistance|windSpeed|x|y|year|z
        )(?=\()
      scope: support.function.mc meta.path.mc
    - match: '\b(Toybox\.)?System\.(print(ln)?|getTimer|getClockTime|getSystemStats|trap|exit|error)\b'
      scope: support.function.mc
    - match: '\b(Toybox\.)?Rez\.(Drawables|Strings|Fonts)\b'
      scope: support.class.mc
    - match: '\bmethod\b'
      scope: support.function.mc

  separators:
    - match: '\.'
      scope: punctuation.separator.mc
    - match: ';'
      scope: punctuation.terminator.mc


  modules:
    - match: '\b(\([:\w]+\))?\s*(module)\s*(\w+)\s*'
      captures:
        1: label
        2: entity.name.namespace.mc storage.type.module.mc
        3: entity.type.namespace.mc
      push: module-definition
  module-definition:
    - meta_scope: meta.namespace.mc
    - match: '\{'
      scope: meta.block.mc punctuation.section.block.mc
    - match: \}
      pop: true
    - include: main

  enums:
    - match: '\benum\s*\{'
      push:
        - meta_scope: meta.block.mc
        - match: '\}'
          pop: true
  arrays:
    - match: '\['
      scope: punctuation.section.array.begin.mc
      push:
        - meta_scope: meta.array.mc
        - match: '\]'
          scope: punctuation.section.array.end.mc
          pop: true
        - include: main
  dicts:
    - match: '\{'
      push:
        - meta_scope: meta.block.dict.mc
        - match: '\}'
          pop: true
        - include: main

  block-types:
    - include: enums
    - include: arrays
    - include: dicts


  main:
    - include: provided
    - include: keywords
    - include: functions
    - include: oop
    - include: comments
    - include: chars
    - include: strings
    - include: numbers
    - include: operators
    - include: string_symbols
    - include: separators
    - include: block-types
    - include: modules
    - match: \(
      push: brackets
    - match: \)
      scope: invalid.illegal.stray-bracket-end




###special system functions?
# method
# Rez: http://developer.garmin.com/connect-iq/programmers-guide/resource-compiler/